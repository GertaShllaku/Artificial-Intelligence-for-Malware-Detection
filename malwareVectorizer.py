import os
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer

#########################################

#Define the parameter to store the path for script to read data.
#And define the parameters to store the labels and text to be vectorized.

path = 'log_files'

#########################################

labels = []
text = []

#########################################

#Read the content from each file and create labels for them
#if the log file belongs to a normal activity "1" will be assigned to it as a    #as a label. Otherwise "-1" will be assigned to indicate it belongs to an attack #activity. I order to perform vectorization, some characters such as comman and  #quotation mark will be removed.

for filename in os.listdir(path):
    if "Good" in filename:
        labels.append("1")
    else:
        labels.append("-1")
    filename = os.path.join(path, filename)
    print(filename)
    with open(filename) as f:
        content = f.read()
    content.replace(",", " ")
    content.replace('"', " ")
    text.append(content)  ## convert file contents into a sentence

###########################################

#Use CountVectorizer() to create a vectorizer for the text of the log files.
#After the vectorization, you will be able to get the features and feature namesvof the content.

vectorizer = CountVectorizer(stop_words='english', max_features=1000)

############################################

#Perform the vectorization and save the results to the csv file.

dtm = vectorizer.fit_transform(text)

df = pd.DataFrame(dtm.toarray(), index=labels, \
                       columns=vectorizer.get_feature_names())

df.index.name = "labels"
df.to_csv(r'DynamicMalwareMatrix.csv')

#################################################

features_list = vectorizer.get_feature_names()
for feature in features_list:
    print (str(feature))

#################################################

print('<<<<<<<DONE>>>>>>>>>')




